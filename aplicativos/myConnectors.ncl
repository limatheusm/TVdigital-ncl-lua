<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Generated by NCL Eclipse -->
<ncl id="myConnectors" xmlns="http://www.ncl.org.br/NCL3.0/EDTVProfile">
	<head>
		<connectorBase>
			<!-- Starta apenas uma midia -->
			<causalConnector id="onBeginStart">
				<simpleCondition role="onBegin"/>
				<simpleAction role="start"/>
			</causalConnector>
			
			<!-- Starta mais de uma midia -->
			<causalConnector id="onBeginStartN">
				<simpleCondition role="onBegin"/>
				<simpleAction role="start" max="unbounded"/>
			</causalConnector>
			
			<causalConnector id="onBeginStop">
				<simpleCondition role="onBegin" />
				<simpleAction role="stop" />
			</causalConnector>
			
			<!--ao begin midia 1, start e stop midia 2-->
			<causalConnector id="onBeginStopNStartN">
				<simpleCondition role="onBegin" />
				<compoundAction operator="par">
					<simpleAction role="stop" max="unbounded" qualifier="par"/>
					<simpleAction role="start" max="unbounded" qualifier="par"/>
				</compoundAction>
			</causalConnector>
			
			<!--ao begin midia 1, start e stop midia 2-->
			<causalConnector id="onBeginStopStart">
				<simpleCondition role="onBegin" />
				<compoundAction operator="par">
					<simpleAction role="stop" />
					<simpleAction role="start" />
				</compoundAction>
			</causalConnector>
			
			<!-- Starta midia com delay -->
			<causalConnector id="onBeginStartDelayed">
				<connectorParam name="delay"/>
				<simpleCondition role="onBegin"/>
				<simpleAction role="start" delay="$delay"/>
			</causalConnector>
			
			<!-- Stop apos final de uma midia -->
			<causalConnector id="onEndStop">
				<simpleCondition role="onEnd"/>
				<simpleAction role="stop"/>
			</causalConnector>
			
			<causalConnector id="onEndStopStart">
				<simpleCondition role="onEnd" />
				<compoundAction operator="par">
					<simpleAction role="stop" />
					<simpleAction role="start" />
				</compoundAction>
			</causalConnector>
			
			<causalConnector id="onEndAttributionStartN">
				<connectorParam name="value"/>
				<simpleCondition role="onEndAttribution"/>
				<simpleAction role="start" max="unbounded" qualifier="par"/>
			</causalConnector>
			
			<causalConnector id="onEndAttributionStart">
				<connectorParam name="value"/>
				<simpleCondition role="onEndAttribution"/>
				<simpleAction role="start"/>
			</causalConnector>
			
			<causalConnector id="onEndAttributionSet">
				<connectorParam name="value"/>
				<simpleCondition role="onEndAttribution"/>
				<simpleAction role="set" value="$value"/>
			</causalConnector>
			
			<causalConnector id="onEndAttributionStartNif">
				<connectorParam name="value"/>
				
				<compoundCondition operator="and">
					<simpleCondition role="onEndAttribution"/>
					<assessmentStatement comparator="eq">
						<attributeAssessment role="testaProp" eventType="attribution" attributeType="nodeProperty"/>
						<valueAssessment value="$value"/>
					</assessmentStatement>
				</compoundCondition>
				
				<simpleAction role="start" max="unbounded" qualifier="par"/>
			</causalConnector>

			<causalConnector id="onEndAttNodeTestStartN">
				<connectorParam name="value"/>
				<compoundCondition operator="and">
					<simpleCondition role="onEnd"/>
					<assessmentStatement comparator="eq">
						<attributeAssessment role="attNodeTest" eventType="attribution"/>
						<valueAssessment value="$value"/>
					</assessmentStatement>
				</compoundCondition>
				<simpleAction role="start" max="unbounded" qualifier="par"/>
			</causalConnector>
			
			<causalConnector id="onEndStopN">
				<simpleCondition role="onEnd"/>
				<simpleAction role="stop" max="unbounded"/>
			</causalConnector>
			
			<!-- Start apos final de uma midia -->
			<causalConnector id="onEndStart">
				<simpleCondition role="onEnd"/>
				<simpleAction role="start"/>
			</causalConnector>
			
			<causalConnector id="onKeySelectionStartNStopN">
				<connectorParam name="vKey"/>
				<simpleCondition role="onSelection" key="$vKey"/>
				<compoundAction operator="par">
					<simpleAction role="start" max="unbounded" qualifier="par"/>
					<simpleAction role="stop" max="unbounded" qualifier="par"/>
				</compoundAction>
			</causalConnector>
			
			<!-- Stop apos selecionar uma key -->
			<causalConnector id="onKeySelectionStop">
				<connectorParam name="vKey"/>
				<simpleCondition role="onSelection" key="$vKey"/>
				<simpleAction role="stop"/>
			</causalConnector>
			
			<!-- Apos uma key, realiza dois eventos: start e stop apenas uma midia -->
			<causalConnector id="onKeySelectionStartStop">
				<connectorParam name="vKey"/>
				<simpleCondition role="onSelection" key="$vKey"/>
				<compoundAction operator="par">
					<simpleAction role="start"/>
					<simpleAction role="stop"/>
				</compoundAction>
			</causalConnector>
			
			
			<!-- Apos uma key, realiza dois eventos: start e stop mais de uma midia -->
			<causalConnector id="onSelectionStartNStopN">
				<simpleCondition role="onSelection"/>
				<compoundAction operator="seq">
					<simpleAction role="start" max="unbounded" qualifier="par"/>
					<simpleAction role="stop" max="unbounded" qualifier="par"/>
				</compoundAction>
			</causalConnector>
			
			<!-- Apos End, aborta uma midia -->
			<causalConnector id="onEndAbort">
				<simpleCondition role="onEnd"/>
				<simpleAction role="abort"/>
			</causalConnector>
			
			<!-- Apos iniciar, seta um valor -->
			<causalConnector id="onBeginSet">
				<connectorParam name="oValor"/>
				<simpleCondition role="onBegin"/>
				<simpleAction role="set" value="$oValor"/>
			</causalConnector>
			
			<!-- Apos iniciar, seta um valor -->
			<causalConnector id="onBeginSetN">
				<connectorParam name="oValor"/>
				<simpleCondition role="onBegin"/>
				<simpleAction role="set" value="$oValor" max="unbounded" qualifier="par"/>
			</causalConnector>
			
	
			
			<!-- Testa se possuem propriedades equivalentes
				if (onBegin && attribution.nodeProperty == oValor){ start }
			 -->
			<causalConnector id="onBeginPropertyTestStart">
				<connectorParam name="oValor"/>
				<!-- operador de condicao: if -->
				<compoundCondition operator="and">
					<!-- onBegin && -->
					<simpleCondition role="onBegin"/>
					<assessmentStatement comparator="eq">
						<!-- attribution.nodeProperty == oValor -->
						<attributeAssessment role="testaProp" eventType="attribution" attributeType="nodeProperty"/>
						<valueAssessment value="$oValor"/>
					</assessmentStatement>
				</compoundCondition>
					
				<simpleAction role="start"/>
			</causalConnector>
			
			
			<causalConnector id="onEndPropertyTestStop">
				
				<connectorParam name="oValor"/>
				
				<!-- operador de condicao: if -->
				<compoundCondition operator="and">
					<!-- onBegin && -->
					<simpleCondition role="onEnd"/>
					<assessmentStatement comparator="eq">
						<!-- attribution.nodeProperty == oValor -->
						<attributeAssessment role="testaProp" eventType="attribution" attributeType="nodeProperty"/>
						<valueAssessment value="$oValor"/>
					</assessmentStatement>
				</compoundCondition>
					
				<simpleAction role="stop"/>
				
			</causalConnector>
			
			<causalConnector id="onEndPropertyTestStart">
				<connectorParam name="oValor"/>
				<!-- operador de condicao: if -->
				<compoundCondition operator="and">
					<!-- onBegin && -->
					<simpleCondition role="onEnd"/>
					<assessmentStatement comparator="eq">
						<!-- attribution.nodeProperty == oValor -->
						<attributeAssessment role="testaProp" eventType="attribution" attributeType="nodeProperty"/>
						<valueAssessment value="$oValor"/>
					</assessmentStatement>
				</compoundCondition>
					
				<simpleAction role="start"/>
			</causalConnector>
			
			
			
			
			<causalConnector id="onKeySelectionPropertyTestStart">
				<connectorParam name="oValor"/>
				<connectorParam name="vKey"/>
				<!-- operador de condicao: if -->
				<compoundCondition operator="and">		
					<simpleCondition role="onSelection" key="$vKey"/>	
					<assessmentStatement comparator="eq">
						<!-- attribution.nodeProperty == oValor -->
						<attributeAssessment role="testaProp" eventType="attribution" />
						<valueAssessment value="$oValor"/>
					</assessmentStatement>
				</compoundCondition>
					
				<simpleAction role="start"/>
			</causalConnector>
			
			
			
			<!-- mesmo que o anterior, porem com varios starts -->
			<causalConnector id="onBeginAttNodeTestStartN">
				<connectorParam name="value"/>
				<compoundCondition operator="and">
					<simpleCondition role="onBegin"/>
					<assessmentStatement comparator="eq">
						<attributeAssessment role="attNodeTest" eventType="attribution" attributeType="nodeProperty"/>
						<valueAssessment value="$value"/>
					</assessmentStatement>
				</compoundCondition>
				<simpleAction role="start" max="unbounded" qualifier="par"/>
			</causalConnector>
			
			<!-- Apos selecionar uma key, executa eventos de start, set e stop, todos com delay paramatrizado -->
			<causalConnector id="onKeySelectionSetVarNStartNStopNDelay">
				<connectorParam name="oValor"/>
				<connectorParam name="aTecla"/>
				<connectorParam name="oRetardo"/>
				
				<simpleCondition role="onSelection" key="$aTecla"/>
				
				<compoundAction operator="par">
					<simpleAction role="set" value="$oValor" delay="$oRetardo"/>
					<simpleAction role="start" delay="$oRetardo"/>
					<simpleAction role="stop" delay="$oRetardo"/>
				</compoundAction>
				
			</causalConnector>
			
			<!-- Testa se apos selecionar uma key, possuem estados equivalentes
				if (onSelection && presetation.state == vState){ start/stop }
			 -->
			<causalConnector id="onKeySelection_and_NodeStateTestStartStop">
				<connectorParam name="vKey"/>
				<connectorParam name="vState"/>
				
				<!-- operador de condicao -->
				<compoundCondition operator="and">
					<!-- onSelection a vKey -->
					<simpleCondition role="onSelection" key="$vKey"/>
					<!-- e -->
					<!-- if presetation.state == vState -->
					<assessmentStatement comparator="eq">
					<attributeAssessment role="test" eventType="presentation" attributeType="state"/>
						<valueAssessment value="$vState"/>
					</assessmentStatement>
				</compoundCondition>
				<compoundAction operator="par">
					<simpleAction role="start"/>
					<simpleAction role="stop"/>
				</compoundAction>
			</causalConnector>
			
			
		</connectorBase>
		
	</head>
</ncl>
